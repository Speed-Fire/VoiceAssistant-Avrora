services:
    voiceassistant.server:
        image: ${DOCKER_REGISTRY-}voiceassistantserver
        depends_on:
            sftp:
                condition: service_started
            redis:
                condition: service_started
            mssql-database:
                condition: service_started
        build:
            context: .
            dockerfile: Server/VoiceAssistant.Server/Dockerfile
        env_file:
            - .env

    sftp:
        image: atmoz/sftp
        container_name: sftp-server
        restart: always
        ports:
            - "${SFTP_PORT}:22"
        volumes:
            - ./volumes/users/AudioUser:/home/AudioUser/upload
        command: >
            AudioUser:12345:::upload

    redis:
        image: "redis:8"
        container_name: redis-queue
        restart: always
        ports:
            - "${REDIST_PORT}:6379"
        command: 
            redis-server --save 20 1 --loglevel warning --requirepass "${REDIS_PASSWORD}"
        

    recognition_worker:
        image: pythondocker
        container_name: recognition_worker
        depends_on:
            sftp:
                condition: service_started
            redis:
                condition: service_started
        build:
            context: .
            dockerfile: Server/VoiceAssistant.Server.SpeechToText/Dockerfile
        env_file:
            - .env
        volumes:
            - whisper_cache:/opt/whisper-cache
 
    mssql-database:
        #image: mssql-with-sqlpackage
        container_name: sql-server
        restart: unless-stopped
        build:
            context: .
            dockerfile: db-inition/Dockerfile
        ports:
            - "1433:1433"
        env_file:
            - .env
        environment:
            ACCEPT_EULA: "Y"
            MSSQL_SA_PASSWORD: "${DATABASE_PASSWORD}"
        volumes:
            - sql-data:/var/opt/mssql

    auth_db:
        image: postgres:15
        restart: always
        env_file:
            - .env
        environment:
            POSTGRES_DB: "${AUTH_DB_NAME}"
            POSTGRES_USER: "${AUTH_DB_USER}"
            POSTGRES_PASSWORD: "${AUTH_DB_PASSWORD}"
        ports:
            - "5432:5432"
        volumes:
            - ./volumes/pgdata:/var/lib/postgresql/data

    auth_server:
        env_file:
            - .env
        build:
            context: .
            dockerfile: Keycloak/Dockerfile
            args:
                AUTH_CLIENT_ADMIN_ID: ${AUTH_CLIENT_ADMIN_ID}
                AUTH_CLIENT_ADMIN_SECRET: ${AUTH_CLIENT_ADMIN_SECRET}
        command: start-dev --import-realm
        depends_on:
            auth_db:
                condition: service_started
        ports:
            - "8080:8080"
        environment:
            KC_DB: postgres
            KC_DB_URL: jdbc:postgresql://auth_db:5432/keycloak
            KC_DB_USERNAME: "${AUTH_DB_USER}"
            KC_DB_PASSWORD: "${AUTH_DB_PASSWORD}"
            KEYCLOAK_ADMIN: "${AUTH_SERVER_ADMIN}"
            KEYCLOAK_ADMIN_PASSWORD: "${AUTH_SERVER_ADMIN_PASSWORD}"
        volumes:
            - ./volumes/Keycloak/:/opt/keycloak/data/import/

volumes:
    sql-data:
    whisper_cache: